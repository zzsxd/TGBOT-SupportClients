#####################################
#            Created by             #
#                SBR                #
#               zzsxd               #
#####################################
import telebot
from threading import Lock
from db import DB
from frontend import Bot_inline_btns
from backend import TempUserData, DbAct

####################################################################
work_dir = '/root/wilberriesbotv2/'
tg_api = '6667593230:AAH2ZgrEVgdE4DEt49ksZ-qD1ThJkEXIPag'
group_id = -1002003996301
db_name = work_dir + 'db.sqlite3'
# xlsx_path = work_dir + 'dump.xlsx'
# image_folder = work_dir + 'photos'
bot = telebot.TeleBot(tg_api)


####################################################################


def main():
    @bot.message_handler(commands=['start'])
    def start_msg(message):
        # print(f'{message.from_user.first_name}, {message.from_user.last_name}')  # –∏–º—è —Ñ–∞–º–∏–ª–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id = message.chat.id
        db_actions.add_user(user_id, message.from_user.first_name, message.from_user.last_name,
                            f'@{message.from_user.username}')
        buttons = Bot_inline_btns()
        bot.send_message(message.chat.id, '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–∫—É–ø–∫—Éüñ§\n'
                                          '–ù–∞–¥–µ–µ–º—Å—è –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è –Ω–∞—à —Ç–æ–≤–∞—Ä. –í –∫–∞—á–µ—Å—Ç–≤–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ '
                                          '–º—ã —Ö–æ—Ç–∏–º —Å–¥–µ–ª–∞—Ç—å –í–∞–º –ø–æ–¥–∞—Ä–æ–∫üéÅ\n'
                                          '‚Äì –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫¬ª\n'
                                          '‚Äì –ß—Ç–æ–±—ã –æ–±—Ä–∞—Ç–∏—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–¥–∞–≤—Ü—É¬ª',
                         reply_markup=buttons.start_btns())

    @bot.message_handler(content_types=['text', 'photo', 'contact'])
    def text(message):
        buttons = Bot_inline_btns()
        user_input = message.text
        user_id = message.chat.id
        contact = message.contact
        photo = message.photo
        if db_actions.user_is_existed(user_id):
            user_current_action = temp_user_data.temp_data(user_id)[user_id][0]
            if user_current_action == 0:
                if contact is not None:
                    contact_forward_id = message.id
                    temp_user_data.temp_data(user_id)[user_id][1] = contact.phone_number
                    bot.send_message(message.chat.id,
                                     f'–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–æ–º–µ—Ä–∞, –Ω–∞ –Ω–µ–≥–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–¥–∞—Ä–æ–∫üéÅ\n'
                                     f'{temp_user_data.temp_data(message.chat.id)[message.chat.id][1]}',
                                     reply_markup=buttons.all_good_btns())
                    temp_user_data.temp_data(message.chat.id)[message.chat.id][3][0] = contact_forward_id
                    temp_user_data.temp_data(message.chat.id)[message.chat.id][0] = None
                else:
                    bot.send_message(message.chat.id, '‚ùå–≠—Ç–æ –Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç‚ùå')
            elif user_current_action == 1:
                if photo is not None:
                    buttons = Bot_inline_btns()
                    photo_forward_id = message.id
                    temp_user_data.temp_data(message.chat.id)[message.chat.id][3][1] = photo_forward_id
                    photo_id = photo[-1].file_id
                    photo_file = bot.get_file(photo_id)
                    photo_bytes = bot.download_file(photo_file.file_path)
                    temp_user_data.temp_data(user_id)[user_id][2] = photo_bytes
                    db_actions.add_review(user_id, temp_user_data.temp_data(user_id)[user_id][1:3])
                    temp_user_data.temp_data(message.chat.id)[message.chat.id][0] = None
                    topic_id = telebot.TeleBot.create_forum_topic(bot, chat_id=group_id,
                                                                  name=f'{message.from_user.first_name} '
                                                                       f'{message.from_user.last_name} –û–¢–ó–´–í',
                                                                  icon_color=0x6FB9F0).message_thread_id
                    bot.forward_messages(chat_id=group_id, from_chat_id=user_id,
                                         message_ids=temp_user_data.temp_data(message.chat.id)[message.chat.id][3],
                                         message_thread_id=topic_id)
                    db_actions.update_review_id(user_id, topic_id)
                    bot.send_message(chat_id=group_id, message_thread_id=topic_id, text='–ü–æ–ª—É—á–µ–Ω –æ—Ç–∑—ã–≤!‚úÖ\n'
                                                                                        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ '
                                                                                        '–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –Ω–∞ '
                                                                                        f'–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: '
                                                                                        f'{temp_user_data.temp_data(message.chat.id)[message.chat.id][1]}',
                                     reply_markup=buttons.review_manager_btns())
                    db_actions.add_action(user_id, 1)
                    bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ‚úÖ\n'
                                                      '–°–∫–æ—Ä–æ –º—ã –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∏–º. –û—Ç–≤–µ—Ç –ø–æ—Å—Ç—É–ø–∏—Ç –≤ —ç—Ç–æ—Ç –±–æ—Ç ‚Äì –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ –µ–≥–æ‚è≥')
                else:
                    bot.send_message(message.chat.id, '‚ùå–≠—Ç–æ –Ω–µ —Ñ–æ—Ç–æ‚ùå')
            elif user_current_action == 2:
                topic_id = db_actions.get_quest_id(user_id)
                if topic_id is None:
                    topic_id = telebot.TeleBot.create_forum_topic(bot, chat_id=group_id,
                                                                  name=f'{message.from_user.first_name} '
                                                                       f'{message.from_user.last_name} –ü–†–û–ë–õ–ï–ú–ê –° '
                                                                       f'–¢–û–í–ê–†–û–ú',
                                                                  icon_color=0x6FB9F0,
                                                                  icon_custom_emoji_id='T').message_thread_id
                    db_actions.update_quest_id(user_id, topic_id)
                    bot.send_message(chat_id=group_id, message_thread_id=topic_id, text='–ü—Ä–æ–±–ª–µ–º–∞ —Å —Ç–æ–≤–∞—Ä–æ–º!\n'
                                                                                        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ '
                                                                                        '–æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –ø—Ä–æ–±–ª–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                                     reply_markup=buttons.give_review_btns())
                bot.forward_message(chat_id=group_id, from_chat_id=message.chat.id, message_id=message.id,
                                    message_thread_id=topic_id)
                db_actions.update_question_status(user_id, True)
                temp_user_data.temp_data(message.chat.id)[message.chat.id][0] = None
                db_actions.add_action(user_id, 0)
            elif db_actions.get_question_status_user_id(user_id):
                client_id = db_actions.user_id_from_question_id(user_id)
                bot.forward_message(chat_id=group_id, from_chat_id=message.chat.id, message_id=message.id,
                                    message_thread_id=client_id)
                db_actions.add_action(user_id, 2)
            elif user_current_action == 3:
                temp_user_data.temp_data(message.chat.id)[message.chat.id][3][0] = message.id
                temp_user_data.temp_data(user_id)[user_id][1] = user_input
                bot.send_message(message.chat.id,
                                 '–°–ø–∞—Å–∏–±–æ! –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–∑—ã–≤–∞. –ú—ã –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∏–º –∏ –≤—ã—à–ª–µ–º –ø–æ–¥–∞—Ä–æ–∫üéÅ',
                                 reply_markup=telebot.types.ReplyKeyboardRemove())
                temp_user_data.temp_data(message.chat.id)[message.chat.id][0] = 1
        elif user_id == group_id:
            topic_id = message.reply_to_message.id
            client_id = db_actions.get_question_id(topic_id)
            question_status = db_actions.get_question_status(topic_id)
            if client_id is not None and question_status:
                if user_input is not None:
                    bot.send_message(chat_id=client_id,
                                     text=user_input)
                elif photo is not None:
                    pass  # –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ç–æ –æ—Ç –º–æ–¥–µ—Ä–∞ –∫ –∫–ª–∏–µ–Ω—Ç—É
                db_actions.add_action(client_id, 3)
        else:
            bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞')

    @bot.callback_query_handler(func=lambda call: True)
    def callback(call):
        user_id = call.message.chat.id
        buttons = Bot_inline_btns()
        if db_actions.user_is_existed(user_id):
            if call.data == 'take_gift':
                if not db_actions.bonus_already_get(user_id):
                    db_actions.update_question_status(user_id, False)
                    bot.send_message(call.message.chat.id,
                                     '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞ –Ω–µ–≥–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–¥–∞—Ä–æ–∫üéÅ\n'
                                     '–ò–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º¬ª',
                                     reply_markup=buttons.share_number_btn())

                    temp_user_data.temp_data(call.message.chat.id)[call.message.chat.id][0] = 0
                else:
                    bot.send_message(user_id, '–ì–æ—Ç–æ–≤–æ‚úÖ\n'
                                              '–°–∫–æ—Ä–æ –º—ã –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∏–º. –û—Ç–≤–µ—Ç –ø–æ—Å—Ç—É–ø–∏—Ç –≤ —ç—Ç–æ—Ç –±–æ—Ç ‚Äì –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ –µ–≥–æ‚è≥')
            elif call.data == 'write_manager':
                bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–±—Ä–∞—â–µ–Ω–∏—è!',
                                 reply_markup=buttons.write_manager_btns())
            elif call.data == 'all_good':
                bot.send_message(call.message.chat.id,
                                 '–°–ø–∞—Å–∏–±–æ! –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–∑—ã–≤–∞. –ú—ã –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∏–º –∏ –≤—ã—à–ª–µ–º –ø–æ–¥–∞—Ä–æ–∫üéÅ',
                                 reply_markup=telebot.types.ReplyKeyboardRemove())
                temp_user_data.temp_data(call.message.chat.id)[call.message.chat.id][0] = 1
            elif call.data == 'not_good':
                bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –ø–æ–¥–∞—Ä–æ–∫üéÅ')
                temp_user_data.temp_data(call.message.chat.id)[call.message.chat.id][0] = 3
            elif call.data in ['another_question', 'complectation_product', 'quality_product']:
                if call.message and call.message.chat:
                    bot.send_message(call.message.chat.id,
                                     '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É. –ü–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, '
                                     '–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—â–∏–µ –ø—Ä–æ–±–ª–µ–º—É\n'
                                     '–ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!')
                    temp_user_data.temp_data(call.message.chat.id)[call.message.chat.id][0] = 2
        elif call.message.chat.id == group_id:
            if call.data == 'give_bonus':
                bot.send_message(chat_id=db_actions.get_user_id_from_topic(call.message.reply_to_message.id),
                                 text='–ü–æ–¥–∞—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω‚úÖ\n'
                                      f'–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –æ—Ç–∑—ã–≤! –ó–∞—á–∏—Å–ª–∏–ª–∏ –≤–∞–º –ø–æ–¥–∞—Ä–æ–∫ –Ω–∞ —Å—á–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {db_actions.get_phone_numer_from_topic(call.message.reply_to_message.id)}')
            elif call.data == 'not_give_bonus':
                bot.send_message(chat_id=db_actions.get_user_id_from_topic(call.message.reply_to_message.id),
                                 text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –Ω–µ –º–æ–∂–µ–º –≤—ã–¥–∞—Ç—å –≤–∞–º –±–æ–Ω—É—Å‚ùå')
            elif call.data == 'problem_sloved':
                topic_id = call.message.reply_to_message.id
                client_id = db_actions.get_question_id(topic_id)
                if not db_actions.bonus_already_get(client_id):
                    db_actions.update_question_status(client_id, False)
                    bot.send_message(chat_id=client_id, text='–†–∞–¥—ã, —á—Ç–æ —É–¥–∞–ª–æ—Å—å —Ä–µ—à–∏—Ç—å –í–∞—à –≤–æ–ø—Ä–æ—Å!\n'
                                          '–ú—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–ª—è –í–∞—Å –ø–æ–¥–∞—Ä–æ–∫ –∑–∞ –æ—Ç–∑—ã–≤üñ§\n'
                                          '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞ –Ω–µ–≥–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–¥–∞—Ä–æ–∫üéÅ\n'
                                          '–ò–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º¬ª',
                                     reply_markup=buttons.share_number_btn())
                    temp_user_data.temp_data(client_id)[client_id][0] = 0
                else:
                    bot.send_message(chat_id=group_id, message_thread_id=topic_id, text='–í—ã —É–∂–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –±–æ–Ω—É—Å‚úÖ')
        else:
            bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞')

    # –∫–æ–Ω—Ç–∞–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    @bot.message_handler(content_types=['contact'])
    def text(message):
        user_id = message.chat.id
        if db_actions.user_is_existed(user_id):
            if message.contact is not None:
                print(message.contact)
        else:
            bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞')

    bot.polling(none_stop=True)


if '__main__' == __name__:
    # if not os.path.exists(image_folder):
    # os.mkdir(image_folder)
    temp_user_data = TempUserData()
    db = DB(db_name, Lock())
    db_actions = DbAct(db)
    main()

# –ø–æ–ª—É—á–∏—Ç—å id —Ç–æ–ø–∏–∫–∞ —Å –í–û–ü–†–û–°–û–ú –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è db_actions.get_quest_id(user_id)
# –ø–æ–ª—É—á–∏—Ç—å id —Ç–æ–ø–∏–∫–∞ —Å –ü–û–î–ê–†–ö–û–ú –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è db_actions.get_review_id(user_id)
